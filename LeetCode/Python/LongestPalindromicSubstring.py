__author__ = 'YiLIU'
class Solution:
    __max_length = 1
    __max_index = 0

    def longest_palindrome(self, s):
        for i in range(len(s)):
            temp = s[i]
            self.__find_palindrome(s, i, i)
            self.__find_palindrome(s, i, i + 1)
        return s[self.__max_index: self.__max_index + self.__max_length]

    def __find_palindrome(self, s, left, right):
        while left >= 0 and right < len(s):
            if s[left] == s[right]:
                if right - left + 1 > self.__max_length:
                    self.__max_length = right - left + 1
                    self.__max_index = left
                left -= 1
                right += 1
            else:
                break


if __name__ == "__main__":
    s = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    print Solution().longest_palindrome(s)